@page "/register"
@inject IAccount AccountService
@inject ILocation LocationService

<!-- Main Start -->
<main>
    <!-- Breadcrumb -->
    <section
    class="w-breadcrumb-area"
    style="
        background: url('img/common/breadcrumb-bg.png') no-repeat
        center center/cover;
    ">
    <div class="container">
        <div class="row">
        <div class="col-auto">
            <div
            class="position-relative z-2"
            data-aos="fade-up"
            data-aos-duration="1000"
            data-aos-easing="linear">
            <h2 class="section-title-light mb-2">Sign Up</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb w-breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">
                    Signup
                </li>
                </ol>
            </nav>
            </div>
        </div>
        </div>
    </div>
    </section>
    <!-- Breadcrumb End -->

    <!-- Login Form -->
    <section class="py-110 bg-offWhite">
    <div class="container">
        <div class="mb-5">
        <div class="row justify-content-center">
            <div class="col-auto">
                <div class="d-flex align-items-center gap-3">
                    <a href="#" class="w-form-btn">Freelancer</a>
                    <a href="#" class="w-form-btn-outline">Client</a> <!-- change the class based on the user action -->
                </div>
            </div>
        </div>
    </div>
    <div class="bg-white rounded-3 p-3">
        <div class="row g-4">
            <div class="col-lg-6 p-3 p-lg-5">
                <div class="mb-40">
                    <h2 class="section-title mb-2">Sign up</h2>
                    <p class="section-desc">Welcome to Abronal Freelance</p>
                </div>
                <EditForm Model="registerModel" OnValidSubmit="RegisterAsync">
                    <div class="form-container">
                        <div class="row gy-3">
                            <div class="form-input col-lg-6">
                                <label for="fname" class="form-label">First Name <span class="text-lime-300">*</span></label>
                                <input @bind="registerModel.FirstName" type="text" id="fname" placeholder="First Name" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="lname" class="form-label">Last Name <span class="text-lime-300">*</span></label>
                                <input @bind="registerModel.LastName" type="text" id="lname" placeholder="Last Name" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="username" class="form-label">Username <span class="text-lime-300">*</span></label>
                                <input @bind="registerModel.UserName" type="text" id="username" placeholder="Username" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="phone" class="form-label">Phone <span class="text-lime-300">*</span></label>
                                <input @bind="registerModel.PhoneNumber" type="text" id="phone" placeholder="09403817190" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="phone" class="form-label">Email <span class="text-lime-300">*</span></label>
                                <input @bind="registerModel.Email" type="text" id="email" placeholder="example@email.com" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="country" class="form-label">Country <span class="text-lime-300">*</span></label>
                                <select @bind="countryId" @bind:event="oninput" @onchange="OnCountryChange"
                                class="form-select shadow-none" name="country" id="country">
                                    <option value="1">Select Country</option>
                                    @foreach (var country in countries)
                                    {
                                        <option value="@country.Id">@country.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="region" class="form-label">Region <span class="text-lime-300">*</span></label>
                                <select @bind="regionId" @bind:event="oninput" @onchange="OnRegionChange"
                                class="form-select shadow-none" name="country" id="country">
                                    <option value="1">Select City</option>
                                    @if (regions != null) {
                                        @foreach (var region in regions)
                                        {
                                            <option value="@region.Id">@region.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-input col-lg-6">
                                <label for="city" class="form-label">City <span class="text-lime-300">*</span></label>
                                <select @bind="registerModel.LocationId"
                                class="form-select shadow-none" name="country" id="country">
                                    <option value="1">Select City</option>
                                    @if (cities != null) {
                                        @foreach (var city in cities)
                                        {
                                            <option value="@city.Id">@city.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-input col-lg-12">
                                <label for="password" class="form-label">Address <span class="text-lime-300">*</span></label>
                                <input type="text" id="password" placeholder="Address here" class="form-control shadow-none" />
                            </div>
                            <div class="form-input col-lg-12">
                                <label for="password" class="form-label">Password <span class="text-lime-300">*</span></label>
                                <input type="text" id="password" placeholder="********" class="form-control shadow-none" />
                            </div>
                        </div>
                        <div class="d-grid mt-4">
                            <button class="w-btn-secondary-lg">Create Account</button>
                        </div>
                    </div>
                </EditForm>
                <div class="mt-3">
                    <p class="text-center form-text">Already have an account ? <a href="signin.html"> Login </a></p>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="login-img">
                    <img src="img/others/1.png" class="img-fluid w-100" alt="" />
                </div>
            </div>
        </div>
    </div>
</div>

    </section>
    <!-- Login Form End -->
</main>
<!-- Maine End -->


@code {
    private RegisterDTO registerModel = new();
    private List<Location> countries = new();
    private List<Location>? regions = null;
    private List<Location>? cities = null;
    private string endpoint = "countries";

    private int countryId;
    private int regionId;
    private bool showForm = false;

    
    private async Task RegisterAsync()
    {
        var result = await AccountService.RegisterUserAsync(registerModel);
        var customAuthStateProvider = (CustomAuthState)AuthStateProvider;

        Navigation.NavigateTo("/", forceLoad: true);
    }

    protected override async Task OnInitializedAsync()
    {
        countries = await LocationService.GetLocations(endpoint);
        endpoint = "regions/";
    }


     private async Task OnCountryChange()
    {
        regions = await LocationService.OnLocationChange(countryId, endpoint);
        if (regions != null)
            endpoint = "cities/";
    }

    private async Task OnRegionChange()
    {
        cities = await LocationService.OnLocationChange(regionId, endpoint);
    }

    private void regClient()
    {
        registerModel.Role = "Client";
        showForm = true;
    }

    private void regFreelancer()
    {
        registerModel.Role = "Freelancer";
        showForm = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setHeroImageHeight");
        }
    }
}
