@page "/location/{action}/{id?}"
@inject HttpClient http
@inject LocationService locationService
@inject NavigationManager Navigate


<EditForm EditContext="@editContext" OnValidSubmit="Submit">
    <label>Name</label>
    <input @bind-value="@Location.Name" />
    <label>Location Type Id</label>
    <input type="number" @bind-value="@Location.LocationTypeId" />
    <label>ParentId</label>
    <input type="number" @bind-value="@Location.ParentId" />
    <label>IsActive</label>
    <select @bind="@value">
        <option value="Select" selected></option>
        <option value="true">Active</option>
        <option value="false">Deactive</option>
    </select>
    <button type="submit">Save Changes</button>
</EditForm>


@code {
    [Parameter]
    public string? Id { get; set; }
    [Parameter]
    public string Action { get; set; }
    private string value { get; set; }
    private Location Location = new Location();
    private EditContext editContext;

    protected override async Task OnInitializedAsync()
    {
        if (Action == "edit" && Id != null)
        {
            Location = locationService.CurrentLocation;
            if (Location == null || Location.Id != Convert.ToInt32(Id)) {
                Navigate.NavigateTo("/notfound");
                return;
            }
        }
        /// notfound should be used !!!!!!!!
        editContext = new EditContext(Location);
    }


    private async void Submit()
    {
        Location.isActive = value == "true";
        if (Action == "add")
            await http.PostAsJsonAsync($"api/location", Location);
        else if (Action == "edit")
            await http.PutAsJsonAsync($"api/location", Location);

        Navigate.NavigateTo("/locations");
    }
}
