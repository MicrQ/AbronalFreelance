<div class="d-xl-flex">
    <SideBar />
    <MobileMenu />
    <!-- Right -->
    <div class="flex-grow-1 align-items-center position-relative">
    <DashboardHeader />
    <!-- Main -->
        <main class="dashboard-main min-vh-100">
            <div class="d-flex flex-column gap-4">
            <div>
                <h3 class="text-24 fw-bold text-dark-300 mb-2">
                Profile Settings
                </h3>
                <ul class="d-flex align-items-center gap-2">
                <li class="text-dark-200 fs-6">Dashboard</li>
                <li>
                    <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="5"
                    height="11"
                    viewBox="0 0 5 11"
                    fill="none">
                    <path
                        d="M1 10L4 5.5L1 1"
                        stroke="#5B5B5B"
                        stroke-width="1.2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                    />
                    </svg>
                </li>
                <li class="text-lime-300 fs-6">Profile Settings</li>
                </ul>
            </div>

            <!-- Content -->
            <div>
                <div class="row justify-content-center">
                <div class="col-xl-8">
                    <EditForm Model="FreelancerProfileDTO" OnValidSubmit="SaveChanges">
                    <div class="d-flex flex-column gap-4">
                        <!-- Profile Info -->
                        <div class="profile-info-card">
                        <!-- Header -->
                        <div class="profile-info-header">
                            <h4 class="text-18 fw-semibold text-dark-300">
                            Profile Info
                            </h4>
                        </div>
                        <div class="profile-info-body bg-white">
                            <div class="row g-4">
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="fname" class="form-label">
                                    First Name
                                    <span class="text-lime-300">*</span>
                                </label>
                                <input
                                    @bind="FreelancerProfileDTO.FirstName"
                                    type="text"
                                    class="form-control shadow-none"
                                    placeholder="Mansa"
                                    required
                                />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="lname" class="form-label">
                                    Last Name
                                    <span class="text-lime-300">*</span></label>
                                <input
                                    @bind="FreelancerProfileDTO.LastName"
                                    type="text"
                                    class="form-control shadow-none"
                                    placeholder="Musa"
                                    required
                                />
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-container">
                                <label for="email" class="form-label">
                                    Email Address
                                    <span class="text-lime-300">*</span></label>
                                <input
                                @bind="FreelancerProfileDTO.Email"
                                    type="email"
                                    class="form-control shadow-none"
                                    placeholder="example@email.com"
                                    required
                                />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="username" class="form-label">
                                    Username
                                    <span class="text-lime-300">*</span></label>
                                <input
                                    @bind="FreelancerProfileDTO.UserName"
                                    type="text"
                                    class="form-control shadow-none"
                                    placeholder="mansa_m"/>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="headline" class="form-label">
                                    Headline
                                    <span class="text-lime-300">*</span></label>
                                <input
                                    @bind="FreelancerProfileDTO.Headline"
                                    type="text"
                                    class="form-control shadow-none"
                                    placeholder="Aspiring Software Engineer | ..."/>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="phone" class="form-label">
                                    Phone
                                    <span class="text-lime-300">*</span></label>
                                <input
                                    @bind="FreelancerProfileDTO.Phone"
                                    type="text"
                                    class="form-control shadow-none"
                                    placeholder="0912345678"/>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="category" class="form-label">
                                    Country
                                    <span class="text-lime-300">*</span></label>
                                <select
                                    @bind="countryId" @bind:event="oninput" @onchange="OnCountryChange"
                                    id="country"
                                    autocomplete="off"
                                    class="form-select shadow-none"
                                    required >
                                    <option value="">Select Country</option>
                                    @foreach (var country in countries)
                                    {
                                    <option value="@country.Id">@country.Name</option>
                                    }
                                </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-container">
                                <label for="state" class="form-label"
                                    >Region
                                    <span class="text-lime-300">*</span></label>
                                <select
                                @bind="regionId" @bind:event="oninput" @onchange="OnRegionChange"
                                    id="region"
                                    autocomplete="off"
                                    class="form-select shadow-none"
                                required >
                                    <option value="">Select City</option>
                                    @if (regions != null) {
                                        @foreach (var region in regions)
                                        {
                                            <option value="@region.Id">@region.Name</option>
                                        }
                                    }
                                </select>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-container">
                                <label for="country" class="form-label">
                                    City
                                    <span class="text-lime-300">*</span></label>
                                <select
                                @bind="FreelancerProfileDTO.LocationId"
                                    id="city"
                                    autocomplete="off"
                                    class="form-select shadow-none"
                                required >
                                    <option value="">Select City</option>
                                    @if (cities != null) {
                                        @foreach (var city in cities)
                                        {
                                            <option value="@city.Id">@city.Name</option>
                                        }
                                    }
                                </select>
                                </div>
                            </div>
                            </div>
                        </div>
                        </div>
                        <!-- Profile Info -->
                        <div class="profile-info-card">
                        <!-- Header -->
                        <div class="profile-info-header">
                            <h4 class="text-18 fw-semibold text-dark-300">
                            Fields
                            </h4>
                        </div>
                        <div class="profile-info-body bg-white">
                            <div class="row g-4">
                            <div class="col-12">
                                <select @bind="@FieldId"
                                class="form-select shadow-none">
                                    <option value="" selected>Select Fields</option>
                                    @foreach (var fld in AllFields) {
                                        <option value="@fld.Id" @onclick="AddField">@fld.Name</option>
                                    }
                                </select>
                                <div
                                class="skill-cloud mt-4 d-flex align-items-center gap-3 flex-wrap">
                                @foreach(var field in freelancerFields) {
                                    <span class="skill-cloud-item" style="cursor: pointer;" @onclick="@(() => removeField(@field))">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="7"
                                        height="8"
                                        viewBox="0 0 7 8"
                                        fill="none"
                                    >
                                        <path
                                        fill-rule="evenodd"
                                        clip-rule="evenodd"
                                        d="M0.214855 0.714855C0.501329 0.428382 0.965796 0.428382 1.25227 0.714855L3.5 2.96259L5.74773 0.714856C6.0342 0.428382 6.49867 0.428382 6.78514 0.714856C7.07162 1.00133 7.07162 1.4658 6.78514 1.75227L4.53741 4L6.78514 6.24773C7.07162 6.5342 7.07162 6.99867 6.78514 7.28514C6.49867 7.57162 6.0342 7.57162 5.74773 7.28514L3.5 5.03741L1.25227 7.28514C0.965796 7.57162 0.50133 7.57162 0.214856 7.28514C-0.0716182 6.99867 -0.0716181 6.5342 0.214856 6.24773L2.46259 4L0.214855 1.75227C-0.0716185 1.4658 -0.0716185 1.00133 0.214855 0.714855Z"
                                        fill="#907386"
                                        />
                                    </svg>
                                    @AllFields.FirstOrDefault(f => f.Id == field.FieldId).Name
                                    </span>

                                }
                                @if (freelancerFields.Count == 0) {
                                    <p>No Field selected.</p>
                                }
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                    <div class="profile-info-card">
                        <!-- Header -->
                        <div class="profile-info-header">
                            <h4 class="text-18 fw-semibold text-dark-300">
                            Skills
                            </h4>
                        </div>
                        <div class="profile-info-body bg-white">
                            <div class="row g-4">
                            <div class="col-12">
                                <select @bind="@SkillId"
                                class="form-select shadow-none">
                                    <option value="" selected>Select Skills</option>
                                    @foreach (var skl in AllSkills) {
                                        <option value="@skl.Id" @onclick="AddSkill">@skl.Name</option>
                                    }
                                </select>
                                <div
                                class="skill-cloud mt-4 d-flex align-items-center gap-3 flex-wrap">
                                @foreach(var skill in freelancerSkills) {
                                    <span class="skill-cloud-item" style="cursor: pointer;" @onclick="@(() => removeSkill(@skill))">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="7"
                                        height="8"
                                        viewBox="0 0 7 8"
                                        fill="none"
                                    >
                                        <path
                                        fill-rule="evenodd"
                                        clip-rule="evenodd"
                                        d="M0.214855 0.714855C0.501329 0.428382 0.965796 0.428382 1.25227 0.714855L3.5 2.96259L5.74773 0.714856C6.0342 0.428382 6.49867 0.428382 6.78514 0.714856C7.07162 1.00133 7.07162 1.4658 6.78514 1.75227L4.53741 4L6.78514 6.24773C7.07162 6.5342 7.07162 6.99867 6.78514 7.28514C6.49867 7.57162 6.0342 7.57162 5.74773 7.28514L3.5 5.03741L1.25227 7.28514C0.965796 7.57162 0.50133 7.57162 0.214856 7.28514C-0.0716182 6.99867 -0.0716181 6.5342 0.214856 6.24773L2.46259 4L0.214855 1.75227C-0.0716185 1.4658 -0.0716185 1.00133 0.214855 0.714855Z"
                                        fill="#907386"
                                        />
                                    </svg>
                                    @AllSkills.FirstOrDefault(f => f.Id == skill.SkillId).Name
                                    </span>

                                }
                                @if (freelancerSkills.Count == 0) {
                                    <p>No Skill selected.</p>
                                }
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>
                        <!-- Submit Btn -->
                        <div class="d-flex align-items-center gap-4">
                        <button class="w-btn-secondary-lg">
                            Save Now
                            <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="10"
                            viewBox="0 0 14 10"
                            fill="none">
                            <path
                                d="M9 9L13 5M13 5L9 1M13 5L1 5"
                                stroke="white"
                                stroke-width="1.5"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                            />
                            </svg>
                        </button>
                        <a href="/dashboard" style="cursor: pointer;" class="text-danger text-decoration-underline">
                            Cancel
                        </a>
                        </div>
                    </div>
                    </EditForm>
                </div>
                </div>
            </div>
            </div>
        </main>
        </div>
</div>
<LogoutPopUp />



@code {
    private string LoggedInUserId { get; set; }
    private bool isEditing = false;

    private int countryId { get; set; }
    private int regionId { get; set; }
    private List<Location> countries = new List<Location>();
    private List<Location>? regions = new List<Location>();
    private List<Location>? cities = new List<Location>();

    private int SkillId { get; set; }
    private int FieldId { get; set; }
    private string endpoint = "countries";

    List<FreelancerSkill> freelancerSkills = new List<FreelancerSkill>();
    List<FreelancerField> freelancerFields = new List<FreelancerField>();

    FreelancerProfileDTO FreelancerProfileDTO = new FreelancerProfileDTO();
    List<Field> AllFields = new List<Field>();
    List<Skill> AllSkills = new List<Skill>();

    


    private void AddSkill() {
        foreach(var ss in freelancerSkills) {
            if (ss.SkillId == SkillId)
                return;
        }
        freelancerSkills.Add(new FreelancerSkill() {
            SkillId = SkillId,
            UserId = LoggedInUserId
        });
    }
    private void AddField() {

        foreach(var ff in freelancerFields) {
            if (ff.FieldId == FieldId)
                return;
        }
        freelancerFields.Add(new FreelancerField() {
            FieldId = FieldId,
            UserId = LoggedInUserId
        });
    }
    private void removeSkill(FreelancerSkill element) {
        freelancerSkills.Remove(element);
    }
    private void removeField(FreelancerField element) {
        freelancerFields.Remove(element);
    }
    private void EditProfile() {
        isEditing = !isEditing;
    }

    private async Task SaveChanges() {
        FreelancerProfileDTO.TopFields = freelancerFields;
        FreelancerProfileDTO.TopSkills = freelancerSkills;
        await ProfileService.UpdateFreelancerProfileAsync(FreelancerProfileDTO, LoggedInUserId);
        Navigation.NavigateTo("/user/profile", forceLoad: true);
    }

    protected override async Task OnInitializedAsync()
    {
        countries = await LocationService.GetLocations(endpoint);
        endpoint = "regions/";

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        LoggedInUserId = AccountService.GetLoggedInUserIdAsync(authState).Value;
        FreelancerProfileDTO = await ProfileService.GetFreelancerProfileAsync(LoggedInUserId);

        AllFields = await FieldService.GetAllFieldsAsync();
        AllSkills = await SkillService.GetAllSkillsAsync();

        foreach(var ff in FreelancerProfileDTO.TopFields) {
            freelancerFields.Add(
                new FreelancerField {
                    FieldId = ff.FieldId,
                    UserId = ff.UserId
                }
            );
        }
        foreach(var ss in FreelancerProfileDTO.TopSkills) {
            freelancerSkills.Add(
                new FreelancerSkill {
                    SkillId = ss.SkillId,
                    UserId = ss.UserId
                }
            );
        }
    }


    private async Task OnCountryChange()
    {
        regions = await LocationService.OnLocationChange(countryId, endpoint);
        if (regions != null)
            endpoint = "cities/";
    }

    private async Task OnRegionChange()
    {
        cities = await LocationService.OnLocationChange(regionId, endpoint);
    }
}
